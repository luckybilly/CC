
Properties properties = new Properties()
try {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
} catch(Exception ignored) {
    return
}

if (!properties.getProperty("is_repo_owner")) {
    return
}

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

project.tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
}

// Bintray
apply plugin: 'com.novoda.bintray-release'
publish {
    repoName = 'android'
    userOrg = properties.getProperty("bintray.userOrg")
    groupId = publishedGroupId
    artifactId = artifact
    publishVersion = libraryVersion
    desc = libraryDescription
    website = siteUrl
}

//apply plugin: 'maven'
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            repository(url: uri('../repo-local')) //deploy到本地仓库
//            pom.groupId = publishedGroupId
//            pom.artifactId = artifact
//            pom.version = libraryVersion + '-SNAPSHOT'
//        }
//    }
//}

apply plugin: 'maven-publish'
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = publishedGroupId
            artifactId = artifact
            version = libraryVersion + '-SNAPSHOT'
            from components.java
        }
    }
    repositories {
        maven {
            url = uri('../repo-local')
        }
    }
}


